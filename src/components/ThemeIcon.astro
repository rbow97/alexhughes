---
---
<button id="themeToggle" class="h-4 w-4 md:h-6 md:w-6 rounded-full border-2 theme-button" />

<style>

#themeToggle {
    background: none;
  }

  .theme-button { border-color: black; }

  :global(.dark) .theme-button { border-color: white; }
  
  :global(.red) .theme-button { border-color: black; }

</style>

<script is:inline>
  const themeOrder = ['light', 'dark', 'red'];
  let currentThemeIndex = 0;

  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
      return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark', 'red');
  } else {
    document.documentElement.classList.add(theme);
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    currentThemeIndex = (currentThemeIndex + 1) % themeOrder.length;
    const nextTheme = themeOrder[currentThemeIndex];

    const element = document.documentElement;
    element.classList.remove(...themeOrder);
    element.classList.add(nextTheme);

    localStorage.setItem("theme", nextTheme);
  }

  document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
  
  // Runs on view transitions navigation
  document.addEventListener('astro:after-swap', function () {
      document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
        const currentTheme = localStorage.getItem("theme");
        if (currentTheme) {
          document.documentElement.classList.add(currentTheme);
          currentThemeIndex = themeOrder.indexOf(currentTheme);
        }
    });

</script>
